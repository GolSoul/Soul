//@version=5
indicator("ORACLE PRECISION PRO ENHANCED [Gold Strategy]", overlay=true, max_labels_count=500)

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🚀 ORACLE PRECISION PRO ENHANCED - Advanced Trading Strategy for Gold
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// Features:
// • Customizable confidence scoring with adjustable component weights
// • Multi-timeframe analysis for comprehensive market view
// • Advanced risk management with ATR-based stop-loss and take-profit
// • Enhanced alerts with detailed ticker and timeframe information
// • Color-coded background shading for buy/sell zones
// • Optimized strategy logic with clear explanations
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// === BASIC INDICATOR INPUTS ===
fastEMA = input.int(9, "Fast EMA", group="📈 Basic Indicators")
slowEMA = input.int(21, "Slow EMA", group="📈 Basic Indicators")
rsiLen = input.int(14, "RSI Length", group="📈 Basic Indicators")
rsiOB = input.int(70, "RSI Overbought", group="📈 Basic Indicators")
rsiOS = input.int(30, "RSI Oversold", group="📈 Basic Indicators")
bbLen = input.int(20, "Bollinger Band Length", group="📈 Basic Indicators")
bbMult = input.float(2.0, "BB Multiplier", group="📈 Basic Indicators")
atrLen = input.int(14, "ATR Length", group="📈 Basic Indicators")
adxLen = input.int(14, "ADX Length", group="📈 Basic Indicators")
adxMin = input.int(20, "Min ADX Strength", group="📈 Basic Indicators")

// === CUSTOMIZABLE CONFIDENCE SCORING WEIGHTS ===
trendWeight = input.float(25.0, "Trend Strength Weight (%)", minval=0, maxval=100, step=1, group="🎯 Confidence Scoring")
macdWeight = input.float(20.0, "MACD Signal Weight (%)", minval=0, maxval=100, step=1, group="🎯 Confidence Scoring")
rsiWeight = input.float(20.0, "RSI Weight (%)", minval=0, maxval=100, step=1, group="🎯 Confidence Scoring")
volatilityWeight = input.float(20.0, "Volatility Weight (%)", minval=0, maxval=100, step=1, group="🎯 Confidence Scoring")
adxWeight = input.float(15.0, "ADX Strength Weight (%)", minval=0, maxval=100, step=1, group="🎯 Confidence Scoring")

// === MULTI-TIMEFRAME ANALYSIS ===
enableMTF = input.bool(true, "Enable Multi-Timeframe Analysis", group="⏰ Multi-Timeframe")
higherTF = input.timeframe("4h", "Higher Timeframe", group="⏰ Multi-Timeframe")
mtfWeight = input.float(10.0, "Higher TF Confirmation Weight (%)", minval=0, maxval=50, step=1, group="⏰ Multi-Timeframe")

// === RISK MANAGEMENT ===
enableRiskMgmt = input.bool(true, "Enable Risk Management", group="🛡️ Risk Management")
atrMultiplierSL = input.float(2.0, "ATR Multiplier for Stop Loss", minval=0.5, maxval=5.0, step=0.1, group="🛡️ Risk Management")
atrMultiplierTP = input.float(3.0, "ATR Multiplier for Take Profit", minval=1.0, maxval=10.0, step=0.1, group="🛡️ Risk Management")
showRiskLevels = input.bool(true, "Show Risk Levels on Chart", group="🛡️ Risk Management")

// === VISUAL AND ALERT SETTINGS ===
showLabels = input.bool(true, "Show Signal Labels", group="🎨 Visuals & Alerts")
showBackground = input.bool(true, "Show Background Zones", group="🎨 Visuals & Alerts")
backgroundTransparency = input.int(90, "Background Transparency", minval=70, maxval=95, step=1, group="🎨 Visuals & Alerts")
enableAlerts = input.bool(true, "Enable Alerts", group="🎨 Visuals & Alerts")
alertDetail = input.bool(true, "Include Detailed Alert Info", group="🎨 Visuals & Alerts")

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 📊 TECHNICAL INDICATOR CALCULATIONS
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Moving Averages - Trend direction indicators
emaFast = ta.ema(close, fastEMA)
emaSlow = ta.ema(close, slowEMA)

// RSI - Momentum oscillator for overbought/oversold conditions
rsi = ta.rsi(close, rsiLen)

// MACD - Trend-following momentum indicator
[macdLine, signalLine, macdHist] = ta.macd(close, 12, 26, 9)

// Bollinger Bands - Volatility and mean reversion indicator
basis = ta.sma(close, bbLen)
dev = bbMult * ta.stdev(close, bbLen)
upperBB = basis + dev
lowerBB = basis - dev

// ATR - Volatility measure for risk management
atr = ta.atr(atrLen)
avgATR = ta.sma(atr, atrLen)

// ADX - Trend strength indicator
adx = ta.adx(adxLen)

// Multi-timeframe analysis
htfEmaFast = enableMTF ? request.security(syminfo.tickerid, higherTF, ta.ema(close, fastEMA)) : emaFast
htfEmaSlow = enableMTF ? request.security(syminfo.tickerid, higherTF, ta.ema(close, slowEMA)) : emaSlow
htfMacdLine = enableMTF ? request.security(syminfo.tickerid, higherTF, ta.macd(close, 12, 26, 9)[0]) : macdLine
htfSignalLine = enableMTF ? request.security(syminfo.tickerid, higherTF, ta.macd(close, 12, 26, 9)[1]) : signalLine

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🔍 TRADING CONDITIONS ANALYSIS
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Trend Analysis - Primary trend direction based on EMA crossover
trendUp = emaFast > emaSlow
trendDown = emaFast < emaSlow
trendStrength = math.abs(emaFast - emaSlow) / emaSlow * 100

// MACD Analysis - Momentum confirmation
macdBull = macdLine > signalLine and macdLine > 0
macdBear = macdLine < signalLine and macdLine < 0
macdMomentum = math.abs(macdLine - signalLine)

// RSI Analysis - Momentum and overbought/oversold conditions
rsiBull = rsi > 50 and rsi < rsiOB  // Bullish momentum without being overbought
rsiBear = rsi < 50 and rsi > rsiOS  // Bearish momentum without being oversold
rsiNeutral = rsi >= 40 and rsi <= 60  // Neutral RSI zone

// Bollinger Band Analysis - Price position relative to volatility bands
priceAboveBB = close > basis
priceBelowBB = close < basis
bbSqueeze = (upperBB - lowerBB) / basis < 0.1  // Low volatility condition

// Volatility Analysis - Market activity confirmation
volatilityOK = atr > avgATR  // Current volatility above average
volatilityExpansion = atr > atr[1] * 1.1  // Expanding volatility

// ADX Analysis - Trend strength confirmation
adxStrong = adx > adxMin
adxRising = adx > adx[1]  // Strengthening trend

// Multi-timeframe Confirmation
htfTrendUp = enableMTF ? htfEmaFast > htfEmaSlow : true
htfTrendDown = enableMTF ? htfEmaFast < htfEmaSlow : true
htfMacdBull = enableMTF ? htfMacdLine > htfSignalLine : true
htfMacdBear = enableMTF ? htfMacdLine < htfSignalLine : true

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🎯 ENHANCED CONFIDENCE SCORING SYSTEM
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Calculate weighted confidence scores for buy and sell signals
buyConfidence = 0.0
sellConfidence = 0.0

// Trend component
if trendUp
    buyConfidence += trendWeight
if trendDown
    sellConfidence += trendWeight

// MACD component
if macdBull
    buyConfidence += macdWeight
if macdBear
    sellConfidence += macdWeight

// RSI component
if rsiBull
    buyConfidence += rsiWeight
if rsiBear
    sellConfidence += rsiWeight

// Volatility component
if volatilityOK
    buyConfidence += volatilityWeight
    sellConfidence += volatilityWeight

// ADX component
if adxStrong
    buyConfidence += adxWeight
    sellConfidence += adxWeight

// Multi-timeframe component
if enableMTF
    if htfTrendUp and htfMacdBull
        buyConfidence += mtfWeight
    if htfTrendDown and htfMacdBear
        sellConfidence += mtfWeight

// Normalize confidence scores to 0-100 range
maxPossibleScore = trendWeight + macdWeight + rsiWeight + volatilityWeight + adxWeight + (enableMTF ? mtfWeight : 0)
buyConfidenceNorm = buyConfidence / maxPossibleScore * 100
sellConfidenceNorm = sellConfidence / maxPossibleScore * 100

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 📋 TRADING SIGNAL CONDITIONS
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Enhanced buy condition with multiple confirmations
buyCond = trendUp and macdBull and rsiBull and priceAboveBB and volatilityOK and adxStrong and buyConfidenceNorm >= 70

// Enhanced sell condition with multiple confirmations  
sellCond = trendDown and macdBear and rsiBear and priceBelowBB and volatilityOK and adxStrong and sellConfidenceNorm >= 70

// Signal strength classification
buyStrength = buyConfidenceNorm >= 90 ? "VERY STRONG" : buyConfidenceNorm >= 80 ? "STRONG" : buyConfidenceNorm >= 70 ? "MODERATE" : "WEAK"
sellStrength = sellConfidenceNorm >= 90 ? "VERY STRONG" : sellConfidenceNorm >= 80 ? "STRONG" : sellConfidenceNorm >= 70 ? "MODERATE" : "WEAK"

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🛡️ RISK MANAGEMENT CALCULATIONS
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Calculate stop-loss and take-profit levels based on ATR
buyStopLoss = enableRiskMgmt and buyCond ? close - (atr * atrMultiplierSL) : na
buyTakeProfit = enableRiskMgmt and buyCond ? close + (atr * atrMultiplierTP) : na
sellStopLoss = enableRiskMgmt and sellCond ? close + (atr * atrMultiplierSL) : na
sellTakeProfit = enableRiskMgmt and sellCond ? close - (atr * atrMultiplierTP) : na

// Risk-reward ratio calculation
buyRiskReward = enableRiskMgmt and buyCond ? (buyTakeProfit - close) / (close - buyStopLoss) : na
sellRiskReward = enableRiskMgmt and sellCond ? (close - sellTakeProfit) / (sellStopLoss - close) : na

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🎨 VISUAL ELEMENTS AND PLOTTING
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Plot moving averages
plot(emaFast, color=color.new(color.green, 20), linewidth=2, title="Fast EMA")
plot(emaSlow, color=color.new(color.red, 20), linewidth=2, title="Slow EMA")

// Plot Bollinger Bands
plot(basis, color=color.new(color.blue, 30), title="BB Basis")
p1 = plot(upperBB, color=color.new(color.gray, 50), title="Upper BB")
p2 = plot(lowerBB, color=color.new(color.gray, 50), title="Lower BB")
fill(p1, p2, color=color.new(color.blue, 95), title="BB Fill")

// Background shading for buy/sell zones
bgcolor(showBackground and buyCond ? color.new(color.green, backgroundTransparency) : na, title="Buy Zone")
bgcolor(showBackground and sellCond ? color.new(color.red, backgroundTransparency) : na, title="Sell Zone")

// Plot risk management levels
plot(showRiskLevels ? buyStopLoss : na, color=color.new(color.red, 0), style=plot.style_circles, linewidth=2, title="Buy Stop Loss")
plot(showRiskLevels ? buyTakeProfit : na, color=color.new(color.green, 0), style=plot.style_circles, linewidth=2, title="Buy Take Profit")
plot(showRiskLevels ? sellStopLoss : na, color=color.new(color.red, 0), style=plot.style_circles, linewidth=2, title="Sell Stop Loss")
plot(showRiskLevels ? sellTakeProfit : na, color=color.new(color.green, 0), style=plot.style_circles, linewidth=2, title="Sell Take Profit")

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🏷️ ENHANCED SIGNAL LABELS
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

if showLabels
    // Buy signal labels
    if buyCond
        labelText = "🔥 BIG BUY\n" + 
                   "Confidence: " + str.tostring(buyConfidenceNorm, "#.#") + "%\n" +
                   "Strength: " + buyStrength + "\n" +
                   (enableRiskMgmt ? "R/R: " + str.tostring(buyRiskReward, "#.##") : "")
        
        label.new(bar_index, low - atr, 
            text=labelText, 
            style=label.style_label_up, 
            color=color.new(color.green, 10), 
            textcolor=color.white, 
            size=size.normal)
    
    // Sell signal labels
    if sellCond
        labelText = "🔥 BIG SELL\n" + 
                   "Confidence: " + str.tostring(sellConfidenceNorm, "#.#") + "%\n" +
                   "Strength: " + sellStrength + "\n" +
                   (enableRiskMgmt ? "R/R: " + str.tostring(sellRiskReward, "#.##") : "")
        
        label.new(bar_index, high + atr, 
            text=labelText, 
            style=label.style_label_down, 
            color=color.new(color.red, 10), 
            textcolor=color.white, 
            size=size.normal)

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 🚨 ENHANCED ALERT SYSTEM
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

// Generate detailed alert messages
if enableAlerts
    // Buy alerts
    if buyCond
        alertMsg = alertDetail ? 
                  "🔥 ORACLE PRECISION PRO - BIG BUY SIGNAL!\n" +
                  "📊 Ticker: " + syminfo.ticker + "\n" +
                  "⏰ Timeframe: " + timeframe.period + "\n" +
                  "🎯 Confidence: " + str.tostring(buyConfidenceNorm, "#.#") + "%\n" +
                  "💪 Strength: " + buyStrength + "\n" +
                  "💰 Price: $" + str.tostring(close, "#.##") + "\n" +
                  (enableRiskMgmt ? "🛡️ Stop Loss: $" + str.tostring(buyStopLoss, "#.##") + "\n" +
                                   "🎯 Take Profit: $" + str.tostring(buyTakeProfit, "#.##") + "\n" +
                                   "📈 Risk/Reward: " + str.tostring(buyRiskReward, "#.##") : "") :
                  "🔥 ORACLE BUY Signal! Confidence: " + str.tostring(buyConfidenceNorm, "#.#") + "%"
                  
        alert(alertMsg, alert.freq_once_per_bar_close)
    
    // Sell alerts
    if sellCond
        alertMsg = alertDetail ?
                  "🔥 ORACLE PRECISION PRO - BIG SELL SIGNAL!\n" +
                  "📊 Ticker: " + syminfo.ticker + "\n" +
                  "⏰ Timeframe: " + timeframe.period + "\n" +
                  "🎯 Confidence: " + str.tostring(sellConfidenceNorm, "#.#") + "%\n" +
                  "💪 Strength: " + sellStrength + "\n" +
                  "💰 Price: $" + str.tostring(close, "#.##") + "\n" +
                  (enableRiskMgmt ? "🛡️ Stop Loss: $" + str.tostring(sellStopLoss, "#.##") + "\n" +
                                   "🎯 Take Profit: $" + str.tostring(sellTakeProfit, "#.##") + "\n" +
                                   "📈 Risk/Reward: " + str.tostring(sellRiskReward, "#.##") : "") :
                  "🔥 ORACLE SELL Signal! Confidence: " + str.tostring(sellConfidenceNorm, "#.#") + "%"
                  
        alert(alertMsg, alert.freq_once_per_bar_close)

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 📈 ALERT CONDITIONS FOR EXTERNAL USE
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

alertcondition(buyCond, title="Oracle Enhanced BIG BUY", message="🔥 BIG BUY | {{ticker}} | {{interval}} | Confidence: " + str.tostring(buyConfidenceNorm, "#.#") + "%")
alertcondition(sellCond, title="Oracle Enhanced BIG SELL", message="🔥 BIG SELL | {{ticker}} | {{interval}} | Confidence: " + str.tostring(sellConfidenceNorm, "#.#") + "%")

// High confidence alerts (90%+ confidence)
alertcondition(buyCond and buyConfidenceNorm >= 90, title="Oracle VERY STRONG BUY", message="🚀 VERY STRONG BUY | {{ticker}} | {{interval}} | Confidence: " + str.tostring(buyConfidenceNorm, "#.#") + "%")
alertcondition(sellCond and sellConfidenceNorm >= 90, title="Oracle VERY STRONG SELL", message="🚀 VERY STRONG SELL | {{ticker}} | {{interval}} | Confidence: " + str.tostring(sellConfidenceNorm, "#.#") + "%")

// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
// 📊 PERFORMANCE MONITORING TABLE (Optional display)
// ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════

showTable = input.bool(false, "Show Performance Table", group="📊 Performance")

if showTable and barstate.islast
    var table perfTable = table.new(position.top_right, 2, 6, bgcolor=color.white, border_width=1)
    
    table.cell(perfTable, 0, 0, "Metric", text_color=color.black, bgcolor=color.gray)
    table.cell(perfTable, 1, 0, "Value", text_color=color.black, bgcolor=color.gray)
    
    table.cell(perfTable, 0, 1, "Buy Confidence", text_color=color.black)
    table.cell(perfTable, 1, 1, str.tostring(buyConfidenceNorm, "#.#") + "%", text_color=color.black)
    
    table.cell(perfTable, 0, 2, "Sell Confidence", text_color=color.black)
    table.cell(perfTable, 1, 2, str.tostring(sellConfidenceNorm, "#.#") + "%", text_color=color.black)
    
    table.cell(perfTable, 0, 3, "Trend Strength", text_color=color.black)
    table.cell(perfTable, 1, 3, str.tostring(trendStrength, "#.##") + "%", text_color=color.black)
    
    table.cell(perfTable, 0, 4, "ADX", text_color=color.black)
    table.cell(perfTable, 1, 4, str.tostring(adx, "#.#"), text_color=color.black)
    
    table.cell(perfTable, 0, 5, "ATR", text_color=color.black)
    table.cell(perfTable, 1, 5, str.tostring(atr, "#.####"), text_color=color.black)